// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tailwind.Traders.Product.Api.Infrastructure;

namespace Tailwind.Traders.Product.Api.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20181113192553_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductBrand", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductFeature", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description");

                    b.Property<int>("ProductItemId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("BrandId");

                    b.Property<string>("ImageName");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.Property<int?>("TagId");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("TagId");

                    b.HasIndex("TypeId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductTag", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductFeature", b =>
                {
                    b.HasOne("Tailwind.Traders.Product.Api.Models.ProductItem")
                        .WithMany("Features")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tailwind.Traders.Product.Api.Models.ProductItem", b =>
                {
                    b.HasOne("Tailwind.Traders.Product.Api.Models.ProductBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tailwind.Traders.Product.Api.Models.ProductTag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Tailwind.Traders.Product.Api.Models.ProductType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
